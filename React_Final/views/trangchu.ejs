<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>demo</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="./style.css">
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
 <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

 <script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.5.4/react.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.5.4/react-dom.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.31.0/react-bootstrap.min.js"></script>
    <script src="libs/react.js"></script>
    <script src="libs/react-dom.js"></script>
    <script src="libs/browser.min.js"></script>


  </head>
  <body>


    <div id='container' class="container">
      <div>


      </div>

     </div>

       </script>
    <script type="text/babel">
    var Button=ReactBootstrap.Button;
    var Grid=ReactBootstrap.Grid;
    var Row=ReactBootstrap.Row;
    var Col=ReactBootstrap.Col;
    var hotkey=ReactBootstrap.hotkey;

    class FirstComponent extends React.Component {
       render() {
          return (
              <div>
              <h1 className='class1'>2048</h1>
              <Score/>
              <h1 className='text'>Play game 2048</h1>
              <Button bsSize="large " className='bt_newgame'>New Game</Button>
              </div>
          );
       }
    }
    class Score extends React.Component {
       render() {
          return (
              <div className='score'>
              <div>Score</div>
              <div>76</div>
              </div>


          );
       }
    }

    class SecondComponent extends React.Component {
      constructor(props) {
      super(props);

      this.state = {
         color:[["#ccccb3","#ccccb3","#ccccb3","#ccccb3"],["brown","#ccccb3","#ccccb3","#ccccb3"],["#ccccb3","#ccccb3","#ccccb3","#ccccb3"],["#ccccb3","#ccccb3","#ccccb3","#ccccb3"]],
          key:[[0,0,0,0],[2,0,0,0],[0,0,0,0],[0,0,0,0]]

      }

      this.Up = this.Up.bind(this);
      this.Down = this.Down.bind(this);
      this.Left = this.Left.bind(this);
      this.Right = this.Right.bind(this);
      //this.Right = this.Right.bind(this);


   }
   /////////////////////////////////////////////////
    Up() {

     var a=this.state.key.slice();

     var c=this.state.color.slice();
     console.log(a);
     console.log(c);
     var flag=false;
     ///////////////////////////////////
     var choitiep=false;
     for(var i=0;i<4;i++){
       for(var j=0;j<3;j++){
         if((a[j][i]==0 &&a[j+1][i]>0)||(a[j][i]==a[j+1][i]&&a[j][i]!=0)){
           choitiep=true;
           break;
         }


       }
       if(choitiep==true){
         break;
       }
     }
     ///////////////////////////////////
     //kiem tra con co the tiep tuc choi khong
     if(choitiep==true){
     for(var i=0;i<4;i++){
       //loai cac so 0 dau dong
       var x=3;
       for( var j=0;j<=x;j++){

         if(a[j][i]==0){
           for( var k=j;k<3;k++){

             a[k][i]=a[k+1][i];
             c[k][i]=c[k+1][i];
           }
           console.log(x);
           a[x][i]=0;
           c[x][i]="#ccccb3";
           x=x-1;
           j=j-1;
         }

       }
       console.log(a);
       console.log(c);
       //xet cac truong hop
       var check=false;
       if(a[0][i]==a[1][i]&&a[2][i]==a[3][i]){
         a[0][i]=a[0][i]*2;
         a[1][i]=a[2][i]*2;
         c[1][i]=c[2][i];
         a[2][i]=a[3][i]=0;
         c[2][i]="#ccccb3"
         c[3][i]="#ccccb3";
         check==true;
       }
       if(a[0][i]==a[1][i]&&a[2][i]!=a[3][i]&&check==false){
         a[0][i]=a[0][i]*2;
         a[1][i]=a[2][i];
         c[1][i]=c[2][i];
         a[2][i]=a[3][i];
         c[2][i]=c[3][i];
         a[3][i]=0;
         c[3][i]="#ccccb3";
         check=true;

       }
       if(a[0][i]!=a[1][i]&&a[2][i]==a[3][i]&&a[1][i]!=a[2][i]&&check==false){
         a[2][i]=a[2][i]*2;
         a[3][i]=0;
         c[3][i]="#ccccb3";
         check=true;
       }
       if(a[0][i]!=a[1][i]&&a[1][i]==a[2][i]&&check==false){
         a[1][i]=a[1][i]*2;
         a[2][i]=a[3][i];
         c[2][i]=c[3][i];
         a[3][i]=0;
         c[3][i]="#ccccb3";
       }
     }
     console.log(a);
     console.log(c);
     //////////////////////////////////////
     var flag=false;
     for(var i=0;i<4;i++){
       for( var j=0;j<4;j++){
         if(a[i][j]==0){
           flag=true;
           break;
         }

         }
         if(flag==true){
           break;
       }
     }

     ////////////////////////////////////
     if(flag==true){
       i=0
     while(i<15){

     var x=Math.floor((Math.random() * 4) + 0);
     var y=Math.floor((Math.random() * 4) + 0);
     if(a[x][y]==0){
       a[x][y]=2;
       c[x][y]='brown';
       break;
     }
     i++;
   }
   this.setState({key:a,
                  color:c
   });
   console.log(this.state.key);
 }
 else{
   console.log("thua");
 }

 }
     ///////////////////////////////////

   }

   Down() {
     var a=this.state.key.slice();

     var c=this.state.color.slice();
     console.log(a);
     console.log(c);
     var flag=false;
     ///////////////////////////////////
     var choitiep=false;
     for(var i=0;i<4;i++){
       for(var j=0;j<3;j++){
         if((a[j][i]>0 &&a[j+1][i]==0)||(a[j][i]==a[j+1][i]&&a[j][i]!=0)){
           choitiep=true;
           break;
         }


       }
       if(choitiep==true){
         break;
       }
     }
     ///////////////////////////////////
     //kiem tra con co the tiep tuc choi khong
     if(choitiep==true){
     for(var i=0;i<4;i++){
       //loai cac so 0 dau dong
       var x=0;
       for( var j=3;j>x;j--){

         if(a[j][i]==0){
           for( var k=j;k>0;k--){

             a[k][i]=a[k-1][i];
             c[k][i]=c[k-1][i];
           }
           console.log(x);
           a[x][i]=0;
           c[x][i]="#ccccb3";
           x=x+1;
           j=j+1;
         }

       }
       console.log(a);
       console.log(c);
       //xet cac truong hop
       var check=false;
       if(a[3][i]==a[2][i]&&a[1][i]==a[0][i]){
         a[3][i]=a[3][i]*2;
         a[2][i]=a[1][i]*2;
         c[2][i]=c[1][i];
         a[1][i]=a[0][i]=0;
         c[1][i]="#ccccb3"
         c[0][i]="#ccccb3";
         check==true;
       }
       if(a[3][i]==a[2][i]&&a[1][i]!=a[0][i]&&check==false){
         a[3][i]=a[3][i]*2;
         a[2][i]=a[1][i];
         c[2][i]=c[1][i];
         a[1][i]=a[0][i];
         c[1][i]=c[0][i];
         a[0][i]=0;
         c[0][i]="#ccccb3";
         check=true;

       }
       if(a[3][i]!=a[2][i]&&a[1][i]==a[0][i]&&a[2][i]!=a[1][i]&&check==false){
         a[1][i]=a[1][i]*2;
         a[0][i]=0;
         c[0][i]="#ccccb3";
         check=true;
       }
       if(a[3][i]!=a[2][i]&&a[2][i]==a[1][i]&&check==false){
         a[2][i]=a[2][i]*2;
         a[1][i]=a[0][i];
         c[1][i]=c[0][i];
         a[0][i]=0;
         c[0][i]="#ccccb3";
       }
     }
     console.log(a);
     console.log(c);
     //////////////////////////////////////
     var flag=false;
     for(var i=0;i<4;i++){
       for( var j=0;j<4;j++){
         if(a[i][j]==0){
           flag=true;
           break;
         }

         }
         if(flag==true){
           break;
       }
     }

     ////////////////////////////////////
     if(flag==true){
       i=0
     while(i<15){

     var x=Math.floor((Math.random() * 4) + 0);
     var y=Math.floor((Math.random() * 4) + 0);
     if(a[x][y]==0){
       a[x][y]=2;
       c[x][y]='brown';
       break;
     }
     i++;
   }
   this.setState({key:a,
                  color:c
   });
   console.log(this.state.key);
 }
 else{
   console.log("thua");
 }

 }

  }
  Right() {
    var a=this.state.key.slice();

    var c=this.state.color.slice();
    console.log(a);
    console.log(c);
    var flag=false;
    ///////////////////////////////////
    var choitiep=false;
    for(var i=0;i<4;i++){
      for(var j=0;j<3;j++){
        if((a[i][j]>0 &&a[i][j+1]==0)||(a[i][j]==a[i][j+1]&&a[i][j]!=0)){
          choitiep=true;
          break;
        }


      }
      if(choitiep==true){
        break;
      }
    }
    ///////////////////////////////////
    //kiem tra con co the tiep tuc choi khong
    if(choitiep==true){
    for(var i=0;i<4;i++){
      //loai cac so 0 dau dong
      var x=0;
      for( var j=3;j>x;j--){

        if(a[i][j]==0){
          for( var k=j;k>0;k--){

            a[i][k]=a[i][k-1];
            c[i][k]=c[i][k-1];
          }
          console.log(x);
          a[i][x]=0;
          c[i][x]="#ccccb3";
          x=x+1;
          j=j+1;
        }

      }
      console.log(a);
      console.log(c);
      //xet cac truong hop
      var check=false;
      if(a[i][3]==a[i][2]&&a[i][1]==a[i][0]){
        a[i][3]=a[i][3]*2;
        a[i][2]=a[i][1]*2;
        c[i][2]=c[i][1];
        a[i][1]=a[i][0]=0;
        c[i][1]="#ccccb3"
        c[i][0]="#ccccb3";
        check==true;
      }
      if(a[i][3]==a[i][2]&&a[i][1]!=a[i][0]&&check==false){
        a[i][3]=a[i][3]*2;
        a[i][2]=a[i][1];
        c[i][2]=c[i][1];
        a[i][1]=a[i][0];
        c[i][1]=c[i][0];
        a[i][0]=0;
        c[i][0]="#ccccb3";
        check=true;

      }
      if(a[i][3]!=a[i][2]&&a[i][1]==a[i][0]&&a[i][2]!=a[i][1]&&check==false){
        a[i][1]=a[i][1]*2;
        a[i][0]=0;
        c[i][0]="#ccccb3";
        check=true;
      }
      if(a[i][3]!=a[i][2]&&a[i][2]==a[i][1]&&check==false){
        a[i][2]=a[i][2]*2;
        a[i][1]=a[i][0];
        c[i][1]=c[i][0];
        a[i][0]=0;
        c[i][0]="#ccccb3";
      }
    }
    console.log(a);
    console.log(c);
    //////////////////////////////////////
    var flag=false;
    for(var i=0;i<4;i++){
      for( var j=0;j<4;j++){
        if(a[i][j]==0){
          flag=true;
          break;
        }

        }
        if(flag==true){
          break;
      }
    }

    ////////////////////////////////////
    if(flag==true){
      i=0
    while(i<15){

    var x=Math.floor((Math.random() * 4) + 0);
    var y=Math.floor((Math.random() * 4) + 0);
    if(a[x][y]==0){
      a[x][y]=2;
      c[x][y]='brown';
      break;
    }
    i++;
  }
  this.setState({key:a,
                 color:c
  });
  console.log(this.state.key);
}
else{
  console.log("thua");
}

}
 }
 Left() {
   var a=this.state.key.slice();

   var c=this.state.color.slice();
   console.log(a);
   console.log(c);
   var flag=false;
   ///////////////////////////////////
   var choitiep=false;
   for(var i=0;i<4;i++){
     for(var j=0;j<3;j++){
       if((a[i][j]==0 &&a[i][j+1]>0)||(a[i][j]==a[i][j+1]&&a[i][j]!=0)){
         choitiep=true;
         break;
       }


     }
     if(choitiep==true){
       break;
     }
   }
   ///////////////////////////////////
   //kiem tra con co the tiep tuc choi khong
   if(choitiep==true){
   for(var i=0;i<4;i++){
     //loai cac so 0 dau dong
     var x=3;
     for( var j=0;j<=x;j++){

       if(a[i][j]==0){
         for( var k=j;k<3;k++){

           a[i][k]=a[i][k+1];
           c[i][k]=c[i][k+1];
         }
         console.log(x);
         a[i][k]=0;
         c[i][k]="#ccccb3";
         x=x-1;
         j=j-1;
       }

     }
     console.log(a);
     console.log(c);
     //xet cac truong hop
     var check=false;
     if(a[i][0]==a[i][1]&&a[i][2]==a[i][3]){
       a[i][0]=a[i][0]*2;
       a[i][1]=a[i][2]*2;
       c[i][1]=c[i][2];
       a[i][2]=a[i][3]=0;
       c[i][2]="#ccccb3"
       c[i][3]="#ccccb3";
       check==true;
     }
     if(a[i][0]==a[i][1]&&a[i][2]!=a[i][3]&&check==false){
       a[i][0]=a[i][0]*2;
       a[i][1]=a[i][2];
       c[i][1]=c[i][2];
       a[i][2]=a[i][3];
       c[i][2]=c[i][3];
       a[i][3]=0;
       c[i][3]="#ccccb3";
       check=true;

     }
     if(a[i][0]!=a[i][1]&&a[i][2]==a[i][3]&&a[i][1]!=a[i][2]&&check==false){
       a[i][2]=a[i][2]*2;
       a[i][3]=0;
       c[i][3]="#ccccb3";
       check=true;
     }
     if(a[i][0]!=a[i][1]&&a[i][1]==a[i][2]&&check==false){
       a[i][1]=a[i][1]*2;
       a[i][2]=a[i][3];
       c[i][2]=c[i][3];
       a[i][3]=0;
       c[i][3]="#ccccb3";
     }
   }
   console.log(a);
   console.log(c);
   //////////////////////////////////////
   var flag=false;
   for(var i=0;i<4;i++){
     for( var j=0;j<4;j++){
       if(a[i][j]==0){
         flag=true;
         break;
       }

       }
       if(flag==true){
         break;
     }
   }

   ////////////////////////////////////
   if(flag==true){
     i=0
   while(i<15){

   var x=Math.floor((Math.random() * 4) + 0);
   var y=Math.floor((Math.random() * 4) + 0);
   if(a[x][y]==0){
     a[x][y]=2;
     c[x][y]='brown';
     break;
   }
   i++;
 }
 this.setState({key:a,
                color:c
 });
 console.log(this.state.key);
}
else{
 console.log("thua");
}

}
 }
   ////////////////////////////////////////////////

   /////////////////////////////////////////////////
////////////////////////////////////////////////////
       render() {
          return (
          <div className='second_container'>
          <Cell value={this.state.key[0][0]} color={this.state.color[0][0]}/>
          <Cell value={this.state.key[0][1]} color={this.state.color[0][1]}/>
          <Cell value={this.state.key[0][2]} color={this.state.color[0][2]}/>
          <Cell value={this.state.key[0][3]} color={this.state.color[0][3]}/>
          <Cell value={this.state.key[1][0]} color={this.state.color[1][0]}/>
          <Cell value={this.state.key[1][1]} color={this.state.color[1][1]}/>
          <Cell value={this.state.key[1][2]} color={this.state.color[1][2]}/>
          <Cell value={this.state.key[1][3]} color={this.state.color[1][3]}/>
          <Cell value={this.state.key[2][0]} color={this.state.color[2][0]}/>
          <Cell value={this.state.key[2][1]} color={this.state.color[2][1]}/>
          <Cell value={this.state.key[2][2]} color={this.state.color[2][2]}/>
          <Cell value={this.state.key[2][3]} color={this.state.color[2][3]}/>
          <Cell value={this.state.key[3][0]} color={this.state.color[3][0]}/>
          <Cell value={this.state.key[3][1]} color={this.state.color[3][1]}/>
          <Cell value={this.state.key[3][2]} color={this.state.color[3][2]}/>
          <Cell value={this.state.key[3][3]} color={this.state.color[3][3]}/>
          <div className="div_button">
          <div className="bt1">
        <Button bsStyle="primary" onClick = {this.Up}>&#8593;</Button>
          </div>
          <div className="bt2">
          <div className="bt3">
          <Button bsStyle="primary" onClick = {this.Left}>&#8592;</Button>
          </div>
          <div className="bt3">
          <Button bsStyle="primary" onClick = {this.Down}>&#8595;</Button>
          </div>
          <div className="bt3">
          <Button bsStyle="primary" onClick = {this.Right}>&#8594;</Button>
          </div>
          </div>
          </div>
          </div>


          );
       }

    /* event is an instance of SyntheticEvent
       from wich you can extract the currentTarget
    */


    }

    class MyComponent extends React.Component {
       render() {
          return (
              <div >
              <FirstComponent/>
              <SecondComponent/>
              </div>


          );
       }
    }
    class MyButton extends React.Component {
       render() {
          return (
              <div >
            <Button bsStyle="primary">{this.props.name}</Button>
              </div>


          );
       }
    }
    class Cell extends React.Component {

       render() {
         var mystyle={
           color:this.props.color
         }
          return (
              <div className='cell' style={mystyle} >

              {this.props.value}
              </div>



          );
       }
    }

ReactDOM.render(<MyComponent/>,document.getElementById('container'));
/////////////////////////////////////////////////////////////

    </script>
  </body>
</html>
